openapi: "3.0.1"
info:
  title: "HuBMAP Spatial API"
  description: "The HuBMAP Spatial API is a standard RESTful web service with create\
    \ operations."
  version: "1.0.0"
servers:
- url: "https://spatial.api.hubmapconsortium.org"
paths:
  /status:
    get:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/status"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/status"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /search/hubmap-id/{id}/radius/{radius}/target/{target}:
    get:
      parameters:
      - name: "target"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "radius"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        type: "http"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/search/hubmap-id/{id}/radius/{radius}/target/{target}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.path.radius: "method.request.path.radius"
          integration.request.path.target: "method.request.path.target"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      parameters:
      - name: "target"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "radius"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/search/hubmap-id/{id}/radius/{radius}/target/{target}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.path.radius: "method.request.path.radius"
          integration.request.path.target: "method.request.path.target"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /samples/cell-type-counts:
    put:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/samples/cell-type-counts"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/samples/cell-type-counts"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /point-search:
    post:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/point-search"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/point-search"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /samples/incremental-reindex:
    put:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/samples/incremental-reindex"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/samples/incremental-reindex"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /samples/organs/{organ_code}/reindex:
    put:
      parameters:
      - name: "organ_code"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/samples/organs/{organ_code}/reindex"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.organ_code: "method.request.path.organ_code"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      parameters:
      - name: "organ_code"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/samples/organs/{organ_code}/reindex"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.organ_code: "method.request.path.organ_code"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /spatial-search/hubmap-id:
    post:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/spatial-search/hubmap-id"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/spatial-search/hubmap-id"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /samples/{sample_uuid}/reindex:
    put:
      parameters:
      - name: "sample_uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/samples/{sample_uuid}/reindex"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.sample_uuid: "method.request.path.sample_uuid"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      parameters:
      - name: "sample_uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/samples/{sample_uuid}/reindex"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.sample_uuid: "method.request.path.sample_uuid"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /samples/reindex-all:
    put:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/samples/reindex-all"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/samples/reindex-all"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
  /:
    get:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    x-amazon-apigateway-any-method:
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:450834107946:function:HuBMAP-API-Gateway-404/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
  /rebuild-annotation-details:
    put:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/rebuild-annotation-details"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
    options:
      x-amazon-apigateway-integration:
        type: "http_proxy"
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/rebuild-annotation-details"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
components: {}
