openapi: "3.0.1"
info:
  title: "workspaces-api"
  description: "The User Workspaces Server is a REST/Websocket server which allows\
    \ developers to create workspaces and launch interactive sessions on a variety\
    \ of resources. The AWS API Gateway only handles the REST API part."
  version: "2025-02-19T20:24:28Z"
servers:
- url: "https://workspaces.api.hubmapconsortium.org"
paths:
  /shared_workspaces/{workspace_id}:
    get:
      parameters:
      - name: "workspace_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/shared_workspaces/{workspace_id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.workspace_id: "method.request.path.workspace_id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    delete:
      parameters:
      - name: "workspace_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "DELETE"
        uri: "http://${stageVariables.VPCNLB}/shared_workspaces/{workspace_id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.workspace_id: "method.request.path.workspace_id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      parameters:
      - name: "workspace_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/shared_workspaces/{workspace_id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.workspace_id: "method.request.path.workspace_id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /users:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/users/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/users/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /workspaces/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/workspaces/{id}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    put:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/workspaces/{id}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    delete:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "DELETE"
        uri: "http://${stageVariables.VPCNLB}/workspaces/{id}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/workspaces/{id}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /job_types:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/job_types/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/job_types/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /workspaces/{id}/{type}:
    put:
      parameters:
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/workspaces/{id}/{type}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.type: "method.request.path.type"
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      parameters:
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/workspaces/{id}/{type}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.type: "method.request.path.type"
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /jobs/{id}/{type}:
    put:
      parameters:
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/jobs/{id}/{type}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.type: "method.request.path.type"
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      parameters:
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/jobs/{id}/{type}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.type: "method.request.path.type"
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /tokens:
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/tokens/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/tokens/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /jobs:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/jobs/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/jobs/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /parameters:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/parameters/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/parameters/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /workspaces:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/workspaces/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/workspaces/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/workspaces/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /shared_workspaces/{workspace_id}/{put_type}:
    put:
      parameters:
      - name: "workspace_id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "put_type"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/shared_workspace/{workspace_id}/{put_type}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.put_type: "method.request.path.put_type"
          integration.request.path.workspace_id: "method.request.path.workspace_id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      parameters:
      - name: "workspace_id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "put_type"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/shared_workspace/{workspace_id}/{put_type}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.put_type: "method.request.path.put_type"
          integration.request.path.workspace_id: "method.request.path.workspace_id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /jobs/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/jobs/{id}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    put:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/jobs/{id}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/jobs/{id}/"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /status:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/status/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/status/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /shared_workspaces:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/shared_workspaces/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/shared_workspaces/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
    options:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/shared_workspaces/"
        responses:
          default:
            statusCode: "200"
        connectionType: "VPC_LINK"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
