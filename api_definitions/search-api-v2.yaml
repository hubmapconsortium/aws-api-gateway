openapi: "3.0.1"
info:
  title: "HuBMAP Search API v2"
  description: "The HuBMAP Search API is a thin wrapper of the Elasticsearch API.\
    \ It handles data indexing and reindexing into the backend Elasticsearch. It also\
    \ accepts the search query and passes through to the Elasticsearch with data access\
    \ security check."
  version: "2.4.1"
servers:
- url: "https://search.api.hubmapconsortium.org"
paths:
  /{proxy+}:
    x-amazon-apigateway-any-method:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:450834107946:function:HuBMAP-API-Gateway-Search-API-v2/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        cacheNamespace: "9kngxy"
        cacheKeyParameters:
        - "method.request.path.proxy"
        contentHandling: "CONVERT_TO_TEXT"
  /:
    x-amazon-apigateway-any-method:
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:450834107946:function:HuBMAP-API-Gateway-Search-API-v2/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
components: {}
x-amazon-apigateway-gateway-responses:
  UNAUTHORIZED:
    statusCode: 401
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
    responseTemplates:
      application/json: "{ \"message\": \"$context.error.message\", \"hint\": \"$context.authorizer.key\"\
        , \"http_method\": \"$context.httpMethod\"}"
  ACCESS_DENIED:
    statusCode: 403
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
    responseTemplates:
      application/json: "{ \"message\": \"$context.error.message\", \"hint\": \"$context.authorizer.key\"\
        , \"http_method\": \"$context.httpMethod\"}"
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
  RESOURCE_NOT_FOUND:
    statusCode: 404
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
    responseTemplates:
      application/json: "{\"message\":$context.error.messageString}"
