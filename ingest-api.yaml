openapi: "3.0.1"
info:
  title: "HuBMAP Ingest API"
  description: "A restful web service exposing calls needed for the Ingest UI React\
    \ application.\n"
  version: "2.0.20"
servers:
- url: "https://ingest-api.stage.hubmapconsortium.org"
paths:
  /uploads/{identifier}/file-system-abs-path:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/uploads/{identifier}/file-system-abs-path"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/uploads/{identifier}/file-system-abs-path"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /metadata/groups/{identifier}:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/metadata/groups/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/metadata/groups/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /login:
    get:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/login"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /donors/bulk-upload:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MODEL3c4b23"
        required: true
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "500":
          description: "500 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/donors/bulk-upload"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/donors/bulk-upload"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /specimens/{identifier}:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/specimens/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/specimens/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /samples/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MODELbdba21"
        required: true
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "500":
          description: "500 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/samples/bulk"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/samples/bulk"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /samples/bulk-upload:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MODEL99c57e"
        required: true
      responses:
        "400":
          description: "400 response"
          content: {}
        "200":
          description: "200 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/samples/bulk-upload"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/samples/bulk-upload"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/{identifier}/publish:
    put:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Data-Admin-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/publish"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/publish"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/{identifier}/validate:
    put:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/validate"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/validate"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/status:
    put:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/datasets/status"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/status"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /file-commit:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MODEL2081ab"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MODEL8c42f6"
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "500":
          description: "500 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/file-commit"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/file-commit"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /metadata/usergroups:
    get:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/metadata/usergroups"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/metadata/usergroups"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /metadata/source/{identifier}:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/metadata/source/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/metadata/groups/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /uploads:
    post:
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/uploads"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/uploads"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /donors/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MODELd1e493"
        required: true
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "500":
          description: "500 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/donors/bulk"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/donors/bulk"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /uploads/{identifier}/reorganize:
    put:
      operationId: "reorganizeUpload"
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "500":
          description: "500 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Data-Admin-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/uploads/{identifier}/reorganize"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/uploads/{identifier}/reorganize"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/{identifier}/unpublish:
    put:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/unpublish"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/unpublish"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/{identifier}/verifytitleinfo:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/verifytitleinfo"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/verifytitleinfo"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /{proxy+}:
    x-amazon-apigateway-any-method:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:450834107946:function:HuBMAP-API-Gateway-404/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        cacheNamespace: "o1amgj"
        cacheKeyParameters:
        - "method.request.path.proxy"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /datasets/submissions/request_ingest:
    post:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/datasets/submissions/request_ingest"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/submissions/request_ingest"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /logout:
    get:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/logout"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /uploads/{identifier}/validate:
    put:
      operationId: "validateUpload"
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "500":
          description: "500 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/uploads/{identifier}/validate"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/uploads/{identifier}/validate"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/{identifier}:
    get:
      operationId: "getDataset"
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    put:
      operationId: "putDataset"
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset"
        required: true
      responses:
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "204":
          description: "204 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /metadata/{identifier}:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/metadata/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/metadata/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/{identifier}/file-system-abs-path:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/file-system-abs-path"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/file-system-abs-path"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/{identifier}/status/{status}:
    put:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "status"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/status/{status}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
          integration.request.path.status: "method.request.path.status"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "status"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/status/{status}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
          integration.request.path.status: "method.request.path.status"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /specimens/{identifier}/ingest-group-ids:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "200":
          description: "200 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/specimens/{identifier}/ingest-group-ids"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/specimens/{identifier}/ingest-group-ids"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets:
    get:
      operationId: "searchDataset"
      parameters:
      - name: "keywords"
        in: "query"
        schema:
          type: "string"
      - name: "group"
        in: "query"
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfDataset"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/datasets"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    post:
      operationId: "addDataset"
      requestBody:
        content:
          application/xml:
            schema:
              $ref: "#/components/schemas/Dataset"
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset"
        required: true
      responses:
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "201":
          description: "201 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/datasets"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /entities/{identifier}/allowable-edit-states:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/entities/{identifier}/allowable-edit-states"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/entities/{identifier}/allowable-edit-states"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/ingest:
    post:
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/datasets/ingest"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/ingest"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /metadata/source/type/{type}:
    get:
      parameters:
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/metadata/source/type/{type}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.type: "method.request.path.type"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/metadata/source/type/{type}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.type: "method.request.path.type"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /file-upload:
    post:
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MODEL41bf14"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MODELd4ac0b"
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "500":
          description: "500 response"
          content: {}
        "403":
          description: "403 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/file-upload"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/file-upload"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /:
    get:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    x-amazon-apigateway-any-method:
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:450834107946:function:HuBMAP-API-Gateway-404/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /datasets/derived:
    post:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/datasets/derived"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/derived"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /file-remove:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MODELf57dd4"
        required: true
      responses:
        "200":
          description: "200 response"
          content: {}
        "400":
          description: "400 response"
          content: {}
        "401":
          description: "401 response"
          content: {}
        "500":
          description: "500 response"
          content: {}
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/file-remove"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/file-remove"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /status:
    get:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/status"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/status"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /entities/file-system-rel-path:
    post:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "POST"
        uri: "http://${stageVariables.VPCNLB}/entities/file-system-rel-path"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/entities/file-system-rel-path"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /entities:
    get:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/entities"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /entities/{identifier}:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/entities/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/entities/{identifier}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /metadata/userroles:
    get:
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "GET"
        uri: "http://${stageVariables.VPCNLB}/metadata/userroles"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/metadata/userroles"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /uploads/{identifier}/submit:
    put:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/uploads/{identifier}/submit"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/uploads/{identifier}/submit"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
  /datasets/{identifier}/submit:
    put:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      security:
      - HuBMAP-API-Gateway-Read-Group-Authorizer: []
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "PUT"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/submit"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      x-amazon-apigateway-integration:
        connectionId: "${stageVariables.VPCLINK}"
        httpMethod: "OPTIONS"
        uri: "http://${stageVariables.VPCNLB}/datasets/{indentifier}/submit"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.identifier: "method.request.path.identifier"
        passthroughBehavior: "when_no_match"
        connectionType: "VPC_LINK"
        type: "http_proxy"
components:
  schemas:
    MODEL8c42f6:
      type: "object"
      properties:
        filename:
          type: "string"
        file_uuid:
          type: "string"
    MODEL41bf14:
      type: "object"
      properties:
        file:
          type: "string"
          format: "binary"
    Dataset:
      required:
      - "display_doi"
      - "doi"
      - "entity_type"
      - "status"
      - "uuid"
      type: "object"
      properties:
        uuid:
          type: "string"
        doi:
          type: "string"
        display_doi:
          type: "string"
        status:
          type: "string"
        entity_type:
          type: "string"
        collection:
          $ref: "#/components/schemas/Collection"
        phi:
          type: "boolean"
    MODEL99c57e:
      type: "object"
      properties:
        file:
          type: "string"
          format: "binary"
    MODELf57dd4:
      type: "object"
      properties:
        entity_uuid:
          type: "string"
        file_uuids:
          type: "array"
          items:
            type: "string"
            description: "A list of file uuids"
        files_info_list:
          type: "array"
          items:
            $ref: "#/components/schemas/FileInfo"
    MODELd1e493:
      type: "object"
      properties:
        temp_id:
          type: "string"
        group_uuid:
          type: "string"
    FileInfo:
      required:
      - "file_uuid"
      - "filename"
      type: "object"
      properties:
        filename:
          type: "string"
          description: "The name of the file."
        file_uuid:
          type: "string"
          description: "The HuBMAP unique identifier for the file."
    MODEL3c4b23:
      type: "object"
      properties:
        file:
          type: "string"
          format: "binary"
    MODELd4ac0b:
      type: "object"
      properties:
        temp_file_id:
          type: "string"
    Collection:
      required:
      - "display_doi"
      - "doi"
      - "entity_type"
      - "label"
      - "uuid"
      type: "object"
      properties:
        uuid:
          type: "string"
        doi:
          type: "string"
        display_doi:
          type: "string"
        label:
          type: "string"
        entity_type:
          type: "string"
        description:
          type: "string"
    MODELbdba21:
      type: "object"
      properties:
        temp_id:
          type: "string"
        group_uuid:
          type: "string"
    MODEL2081ab:
      type: "object"
      properties:
        temp_file_id:
          type: "string"
        entity_uuid:
          type: "string"
        user_token:
          type: "string"
    ArrayOfDataset:
      type: "array"
      items:
        $ref: "#/components/schemas/Dataset"
  securitySchemes:
    HuBMAP-API-Gateway-Read-Group-Authorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
      x-amazon-apigateway-authorizer:
        authorizerUri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:450834107946:function:HuBMAP-API-Gateway-Read-Group-Authorizer/invocations"
        authorizerResultTtlInSeconds: 0
        type: "token"
    HuBMAP-API-Gateway-Data-Admin-Group-Authorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
      x-amazon-apigateway-authorizer:
        authorizerUri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:450834107946:function:HuBMAP-API-Gateway-Data-Admin-Group-Authorizer/invocations"
        authorizerResultTtlInSeconds: 0
        type: "token"
